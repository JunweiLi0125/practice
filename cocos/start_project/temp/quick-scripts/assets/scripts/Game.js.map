{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","onLoad","groundY","y","height","spawnNewStar","score","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","randX","randY","random0To1","jumpHeight","maxX","width","randomMinus1To1","p","start","update","dt","gainScore","string","toString"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,yBAAiB,CAPT;AAQRC,yBAAiB,CART;AASR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAVA;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAfA;AAmBR;AACAE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC;AApBN,KAHP;;AA6BL;;AAEAC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKN,MAAL,CAAYO,CAAZ,GAAgB,KAAKP,MAAL,CAAYQ,MAAZ,GAAmB,CAAlD,CAFgB,CAEuC;AACvD;AACA,aAAKC,YAAL;;AAEA;AACA,aAAKC,KAAL,GAAa,CAAb;AACH,KAvCI;;AAyCLD,kBAAc,wBAAW;AACrB;AACA,YAAIE,UAAUtB,GAAGuB,WAAH,CAAe,KAAKlB,UAApB,CAAd;AACA;AACA,aAAKmB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACH,KAlDI;;AAoDLF,wBAAoB,8BAAY;AAC5B,YAAIG,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKd,OAAL,GAAejB,GAAGgC,UAAH,KAAkB,KAAKnB,MAAL,CAAYe,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAgB,CAA3B;AACAL,gBAAQ9B,GAAGoC,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAOlC,GAAGqC,CAAH,CAAKP,KAAL,EAAYC,KAAZ,CAAP;AACH,KA7DI;;AA+DLO,SA/DK,mBA+DI,CAER,CAjEI;AAmELC,UAnEK,kBAmEGC,EAnEH,EAmEO,CAAE,CAnET;;;AAqELC,eAAW,qBAAY;AACnB,aAAKpB,KAAL,IAAc,CAAd;AACA;AACA,aAAKP,YAAL,CAAkB4B,MAAlB,GAA2B,YAAY,KAAKrB,KAAL,CAAWsB,QAAX,EAAvC;AACH;;AAzEI,CAAT","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // this property quotes the PreFab resource of stars\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // the random scale of disappearing time for stars\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // ground node for confirming the height of the generated star's position\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player node for obtaining the jump height of the main character and controlling the movement switch of the main character\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // quotation of score label\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function () {\n        // obtain the anchor point of ground level on the y axis\n        this.groundY = this.ground.y + this.ground.height/2;   // this.ground.top may also work\n        // generate a new star\n        this.spawnNewStar();\n\n        // initialize scoring\n        this.score = 0;\n    },\n\n    spawnNewStar: function() {\n        // generate a new node in the scene with a preset template\n        var newStar = cc.instantiate(this.starPrefab);\n        // put the newly added node under the Canvas node\n        this.node.addChild(newStar);\n        // set up a random position for the star\n        newStar.setPosition(this.getNewStarPosition());\n        // deliver the concrete example of the Game component into the star component\n        newStar.getComponent('Star').game = this;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // According to the position of the ground level and the main character's jump height, randomly obtain an anchor point of the star on the y axis\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\n        // according to the width of the screen, randomly obtain an anchor point of star on the x axis\n        var maxX = this.node.width/2;\n        randX = cc.randomMinus1To1() * maxX;\n        // return to the anchor point of the star\n        return cc.p(randX, randY);\n    },\n\n    start () {\n\n    },\n\n    update (dt) {},\n    \n    gainScore: function () {\n        this.score += 1;\n        // update the words of the scoreDisplay Label\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n    },\n    \n});\n"]}